---
// src/components/ToolCard.astro
const { href, title, description, tags } = Astro.props;

// Asignar colores a los tags basados en su contenido
const tagColors = {
  'finanzas': 'var(--accent-tertiary)',
  'calculadora': 'var(--accent)',
  'inversiÃ³n': 'var(--accent-secondary)',
  'markdown': 'var(--accent)',
  'texto': 'var(--accent-secondary)',
  'editor': 'var(--accent-tertiary)',
  'colores': 'var(--accent-tertiary)',
  'diseÃ±o': 'var(--accent-secondary)',
  'paletas': 'var(--accent)',
  'default': 'var(--accent)'
};

const getTagColor = (tag: string) => {
  const lowerTag = tag.toLowerCase();
  return tagColors[lowerTag] || tagColors.default;
};
---
<a href={href} class="card">
  <div class="card-glow"></div>
  <div class="content">
    <div class="icon-container">
      <div class="tool-icon">ðŸš€</div>
    </div>
    <h3>{title}</h3>
    <p>{description}</p>
  </div>
  <div class="tags-container">
    {tags && tags.map(tag => (
      <span class="tag" style={`--tag-color: ${getTagColor(tag)}`}>
        {tag}
      </span>
    ))}
  </div>
  <div class="card-shine"></div>
</a>

<style>
  .card {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    height: 100%;
    padding: 1.75rem;
    background: var(--card-bg);
    border: 1px solid var(--card-border);
    border-radius: 20px;
    text-decoration: none;
    color: var(--text-color);
    transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
    backdrop-filter: blur(20px);
    -webkit-backdrop-filter: blur(20px);
    box-shadow: 
      0 4px 16px var(--shadow-color),
      inset 0 1px 0 rgba(255, 255, 255, 0.1);
    position: relative;
    overflow: hidden;
    transform-style: preserve-3d;
    perspective: 1000px;
  }

  /* Glow effect en hover */
  .card-glow {
    position: absolute;
    top: -50%;
    left: -50%;
    width: 200%;
    height: 200%;
    background: radial-gradient(
      circle,
      rgba(var(--accent), 0.15) 0%,
      transparent 70%
    );
    opacity: 0;
    transition: opacity 0.4s ease;
    pointer-events: none;
  }

  /* Shine effect */
  .card-shine {
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(
      90deg,
      transparent,
      rgba(255, 255, 255, 0.1),
      transparent
    );
    transition: left 0.6s ease;
    pointer-events: none;
  }

  .card:hover {
    transform: translateY(-8px) scale(1.02);
    box-shadow: 
      0 20px 40px var(--shadow-color),
      0 0 0 1px rgba(var(--accent), 0.3),
      inset 0 1px 0 rgba(255, 255, 255, 0.2);
    border-color: rgba(var(--accent), 0.4);
  }

  .card:hover .card-glow {
    opacity: 1;
  }

  .card:hover .card-shine {
    left: 100%;
  }

  .card:hover .tool-icon {
    transform: scale(1.1) rotate(5deg);
  }

  .content {
    flex-grow: 1;
    position: relative;
    z-index: 1;
  }

  .icon-container {
    margin-bottom: 1rem;
  }

  .tool-icon {
    width: 48px;
    height: 48px;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 1.5rem;
    background: linear-gradient(135deg, rgba(var(--accent), 0.2), rgba(var(--accent-secondary), 0.2));
    border-radius: 12px;
    border: 1px solid rgba(var(--accent), 0.3);
    transition: transform 0.3s ease;
  }

  h3 {
    margin: 0 0 0.75rem 0;
    font-size: 1.35rem;
    font-weight: 700;
    color: var(--text-color);
    line-height: 1.3;
    background: linear-gradient(135deg, var(--text-color), rgba(var(--accent), 1));
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    transition: all 0.3s ease;
  }

  .card:hover h3 {
    background: linear-gradient(135deg, rgb(var(--accent)), rgb(var(--accent-secondary)));
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
  }

  p {
    margin: 0;
    color: var(--text-secondary);
    font-size: 0.95rem;
    line-height: 1.6;
    font-weight: 400;
  }

  .tags-container {
    margin-top: 1.5rem;
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
    position: relative;
    z-index: 1;
  }

  .tag {
    background: linear-gradient(135deg, rgba(var(--tag-color), 0.15), rgba(var(--tag-color), 0.25));
    color: rgb(var(--tag-color));
    padding: 0.4rem 0.9rem;
    border-radius: 8px;
    font-size: 0.75rem;
    font-weight: 600;
    border: 1px solid rgba(var(--tag-color), 0.3);
    transition: all 0.3s ease;
    text-transform: lowercase;
    letter-spacing: 0.02em;
  }

  .tag:hover {
    transform: translateY(-2px);
    background: linear-gradient(135deg, rgba(var(--tag-color), 0.25), rgba(var(--tag-color), 0.35));
    box-shadow: 0 4px 8px rgba(var(--tag-color), 0.2);
  }

  /* AnimaciÃ³n de entrada staggered */
  @keyframes card-entrance {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .card {
    animation: card-entrance 0.6s ease-out backwards;
  }

  /* Responsive */
  @media (max-width: 768px) {
    .card {
      padding: 1.5rem;
    }

    h3 {
      font-size: 1.2rem;
    }

    .tool-icon {
      width: 40px;
      height: 40px;
      font-size: 1.25rem;
    }
  }
</style>